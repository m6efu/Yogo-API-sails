{
	"test.testStringWithLocale": "Test string - en",
	"test.testStringWithOneParameter": "A %s B",
	"test.testStringWithMultipleParameters": "A %s B %s C %s D",
	"test.testStringWithMultipleNamedParameters": "A {a} B {bb} C {c} D",
	"global.with": "with",
	"global.and": "and",
	"global.ID": "ID",
	"global.Date": "Date",
	"global.Time": "Time",
	"global.Class": "Class",
	"global.Duration": "Duration",
	"global.SignUps": "Signups",
	"global.CheckedIn": "Checked in",
	"global.SalaryReport": "Salary Report",
	"global.ClassReport": "Salary Report",
	"global.LivestreamSignups": "Livestream signups",
	"global.Room": "Room",
	"global.TeacherID": "Teacher ID",
	"global.TeacherName": "Teacher name",
	"global.Start": "Start",
	"global.End": "End",


	"capacityText.Fully booked": "Fully booked",
	"capacityText.%s available seats": "%s available seats",
	"capacityText.1 available seat": "1 available seat",
	"capacityText.Booked": "Booked",
	"capacityText.livestreamOpen": "livestream open",
	"class.cancelled": "Cancelled",
	"classSignup.youAreSignedUp": "You are signed up",
	"classSignup.classIsCancelled": "Class is cancelled",
	"classSignup.classIsFullyBooked": "Class is fully booked",
	"classSignup.signupMustHappenAtLeastXHoursInAdvance": "Signup must happen at least %s hours in advance",
	"classSignup.youDoNotHaveAccessToThisClass": "No membership/access pass",
	"classSignup.classSignoffDeadlineHasBeenExceededWarningMembership": "There is less than %s before the class starts, so cancelling your booking will result in a fee of %s. The same fee will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend, so someone else can get your seat.\n\nWould you like to cancel your booking?",
	"classSignup.classSignoffDeadlineHasBeenExceededWarningMembershipDifferentFees": "There is less than %s before the class starts, so cancelling your booking will result in a fee of %s. A fee of %s will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend, so someone else can get your seat.\n\nWould you like to cancel your booking?",
	"classSignup.privateClassSignoffDeadlineHasBeenExceededWarningMembership": "There is less than %s before your private class starts, so cancelling your booking will result in a fee of %s. The same fee will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend.\n\nWould you like to cancel your booking?",
	"classSignup.privateClassSignoffDeadlineHasBeenExceededWarningMembershipDifferentFees": "There is less than %s before your private class starts, so cancelling your booking will result in a fee of %s. A fee of %s will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend.\n\nWould you like to cancel your booking?",
	"classSignup.classSignoffDeadlineHasBeenExceededWarningUnlimitedClassPass": "There is less than %s before the class starts, so cancelling your booking will result in a fee of %s being charged from your class pass. The same fee will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend, so someone else can get your seat.\n\nWould you like to cancel your booking?",
	"classSignup.classSignoffDeadlineHasBeenExceededWarningUnlimitedClassPassDifferentFees": "There is less than %s before the class starts, so cancelling your booking will result in a fee of %s being charged from your class pass. A fee of %s will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend, so someone else can get your seat.\n\nWould you like to cancel your booking?",
	"classSignup.privateClassSignoffDeadlineHasBeenExceededWarningUnlimitedClassPass": "There is less than %s before your private class starts, so cancelling your booking will result in a fee of %s being charged from your class pass. The same fee will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend.\n\nWould you like to cancel your booking?",
	"classSignup.privateClassSignoffDeadlineHasBeenExceededWarningUnlimitedClassPassDifferentFees": "There is less than %s before your private class starts, so cancelling your booking will result in a fee of %s being charged from your class pass. A fee of %s will be applied if you keep the booking but don't attend the class.\n\nOf course, we would appreciate that you cancel if you can not attend.\n\nWould you like to cancel your booking?",
	"classSignup.classSignoffDeadlineHasBeenExceededWarningFixedCountClassPass": "There is less than %s before the class starts, so the class will not be refunded to your class pass.\n\nOf course, we would appreciate that you cancel if you can not attend, so someone else can get your seat.\n\nDo you want to cancel your booking?",
	"classSignup.privateClassSignoffDeadlineHasBeenExceededWarningFixedCountClassPass": "There is less than %s before your private class starts, so the class will not be refunded.\n\nOf course, we would appreciate that you cancel if you can not attend.\n\nDo you want to cancel your booking?",
	"time.minute": "minute",
	"time.minutes": "minutes",
	"time.second": "second",
	"time.seconds": "seconds",
	"time.hour": "hour",
	"time.hours": "hours",
	"time.day": "day",
	"time.days": "days",
	"time.month": "month",
	"time.months": "months",
	"price.campaignPriceTextOneMonthFree": "1 month for free, then {price} kr/month",
	"price.campaignPriceTextOneMonthReducedPrice": "1 month for {reduced_price} kr, then {price} kr/month",
	"price.campaignPriceTextMultipleMonthsFree": "{months} months for free, then {price} kr/month",
	"price.campaignPriceTextMultipleMonthsReducedPrice": "{months} months at {reduced_price} kr/month, then {price} kr/month",
	"discountCode.discountCode": "Discount code",
	"waitingList.xPersonsOnWaitingList": "%s on waitlist",
	"waitingList.waitingListIsFull": "Waitlist full",
	"receipt.invoice_id": "Invoice no.",
	"receipt.date": "Date",
	"receipt.product": "Product",
	"receipt.price": "Price",
	"receipt.total": "Total",
	"receipt.included_vat": "Included VAT",
	"receipt.payment_method": "Payment method",
	"receipt.orderItemNoShowFee": "No-show fee for %s",
	"receipt.PaymentForXFromYToZ": "Payment for %s from %s to %s.",
	"app.appVersionTooLowMessage": "The app is too old. Please update to the newest version.",
	"error.classHasStarted_title": "The class has started",
	"error.classHasStarted_message": "Sign-up is not possible, because the class has started",
	"error.signupDeadlineHasBeenExceeded_title": "Class signup deadline has been exceeded",
	"error.signupDeadlineHasBeenExceeded_message": "Sign-up is not possible, because the class signup deadline has been exceeded",
	"error.loginFailed_title": "Login failed",
	"error.loginFailed_message": "Login failed. Please check email and password.",
	"error.userIsNotTeacher_title": "You are not registered as a teacher",
	"error.userIsNotTeacher_message": "The password is correct, but you don't have access to the teacher module because you are not registered as a teacher in the booking system.",
	"error.emailNotFound_title": "Email not found",
	"error.emailNotFound_message": "The email \"{email}\" does not exist in the system.",
	"error.passwordTooWeak_title": "Password is too weak",
	"error.passwordTooWeak_message": "The password must be at least 6 characters and contain both uppercase and lowercase letters a well as numbers.",
	"error.invalidToken_title": "Token is invalid",
	"error.invalidToken_message": "The token is not valid.",
	"error.tokenExpired_title": "Token is expired",
	"error.tokenExpired_message": "The token is expired and no longer valid.",
	"error.alreadySignedUp_title": "Already signed up",
	"error.alreadySignedUp_message": "The customer is already signed up for the class.",
	"error.classCancelled_title": "Class is cancelled",
	"error.classCancelled_message": "Could not sign customer up. The class is cancelled.",
	"error.classIsFull_title": "Class is fully booked",
	"error.classIsFull_message": "Could not sign customer up. The class is fully booked.",
	"error.noAccess_title": "No access",
	"error.noAccess_message": "The customer has no valid membership or class pass.",
	"error.waitingListDisabled_title": "No waitlist",
	"error.waitingListDisabled_message": "This class has no waitlist.",
	"error.privateClassWaitingListDisabled_title": "No waitlist",
	"error.privateClassWaitingListDisabled_message": "There is no waitlist for this private class.",
	"error.classIsOpen_title": "The class is open",
	"error.classIsOpen_message": "This class has open registration, so sign-up is not possible.",
	"error.signoffDeadlineHasBeenExceeded_title": "The class will start shortly",
	"error.signoffDeadlineHasBeenExceeded_message": "The waitlist for this class has been cancelled, as the class will start shortly.",
	"error.alreadySignedUpForWaitingList_title": "Already on waitlist",
	"error.alreadySignedUpForWaitingList_message": "Could not add customer, as the customer is already on the waitlist.",
	"error.waitingListIsFull_title": "Waitlist is full",
	"error.waitingListIsFull_message": "Could not add customer to waitlist, as the waitlist is full.",
	"error.classIsNotFull_title": "Class is not fully booked",
	"error.classIsNotFull_message": "Could not add customer to waitlist as the class is not fully booked.",
	"error.noShowFeeAlreadyPaid_title": "The fee has already been paid.",
	"error.noShowFeeAlreadyPaid_message": "The fee cannot be cancelled, as it has already been paid.",
	"error.giftCardAmountTooSmall_title": "The amount is below minimum",
	"error.giftCardAmountTooSmall_message": "The minimum amount for gift cards is %s",
	"error.classIsNotToday_title": "The class is not today.",
	"error.classIsNotToday_message": "The class is not today.",
	"error.customersCanNotPauseMemberships_title": "Not allowed",
	"error.customersCanNotPauseMemberships_message": "Customers are not allowed to pause memberships themselves.",
	"error.customersCanNotPauseMembershipsIndefinitely_title": "End date is missing.",
	"error.customersCanNotPauseMembershipsIndefinitely_message": "Customers can not pause memberships indefinitely.",
	"error.membershipNumberOfPausesLimitReached_title": "Not allowed",
	"error.membershipNumberOfPausesLimitReached_message": "You can only pause a membership {membershipPauseMaxCountPerRunningYear} times per running year.",
	"error.membershipPauseTooLong_title": "Not allowed",
	"error.membershipPauseTooLong_message": "A membership pause can be max {membershipPauseMaxDaysPerPause} days.",
	"error.MembershipPauseActiveStartDateCanNotBeChanged_title": "Pause has started",
	"error.MembershipPauseActiveStartDateCanNotBeChanged_message": "Start date can not be changed on an active membership pause.",
	"error.OnlyActiveMembershipsCanBePaused_title": "Membership is not active",
	"error.OnlyActiveMembershipsCanBePaused_message": "Only active memberships can be paused",
	"error.membershipPauseCanNotStartBeforeToday_title": "Start date is invalid.",
	"error.membershipPauseCanNotStartBeforeToday_message": "Pause can not start before today.",
	"error.MembershipPauseEndDateMustBeSameOrAfterStartDate_title": "Invalid dates",
	"error.MembershipPauseEndDateMustBeSameOrAfterStartDate_message": "Pause end date must be later than pause start date",
	"error.MembershipPauseHasEndedAndCanNotBeChanged_title": "Pause has ended",
	"error.MembershipPauseHasEndedAndCanNotBeChanged_message": "A Membership pause that has ended can not be changed.",
	"error.MembershipPauseHasEndedAndCanNotBeRemoved_title": "Pause has ended",
	"error.MembershipPauseHasEndedAndCanNotBeRemoved_message": "A Membership pause that has ended can not be removed.",
	"error.OnlyTheLastMembershipPauseCanBeChanged_title": "Membership pause can not be changed",
	"error.OnlyTheLastMembershipPauseCanBeChanged_message": "Only the last membership pause can be changed",
	"error.OnlyTheLastMembershipPauseCanBeRemoved_title": "Membership pause can not be removed",
	"error.OnlyTheLastMembershipPauseCanBeRemoved_message": "Only the last membership pause can be removed",
	"error.MembershipPauseFeePaidAndCanNotBeChanged_title": "Fee already paid",
	"error.MembershipPauseFeePaidAndCanNotBeChanged_message": "Fee can not be changed as it has already been paid.",
	"error.MembershipPauseFeeWasDeclined_title": "Payment declined",
	"error.MembershipPauseFeeWasDeclined_message": "Fee for membership pause could not be charged. The payment was declined.",
	"error.MembershipAlreadyPaused_title": "Membership is already paused",
	"error.MembershipAlreadyPaused_message": "Membership can not be paused because it already is paused.",
	"error.MembershipAlreadyHasPauseScheduled_title": "Membership already has pause scheduled",
	"error.MembershipAlreadyHasPauseScheduled_message": "Membership can not be paused because it already has a pause scheduled.",
	"error.MembershipPauseOverlapsWithPreviousPause_title": "Membership pauses overlap",
	"error.MembershipPauseOverlapsWithPreviousPause_message": "Membership pause could not be created because it overlaps an existing membership pause.",
	"error.CantEditMembershipPauseBecausePaymentDateIsTooEarly_title": "New payment date is too early",
	"error.CantEditMembershipPauseBecausePaymentDateIsTooEarly_message": "Membership pause can not be edited like this because it would result in a too early payment date and might cause multiple automatic payments.",
	"error.CantRemoveMembershipPauseBecausePaymentDateIsTooEarly_title": "New payment date is too early",
	"error.CantRemoveMembershipPauseBecausePaymentDateIsTooEarly_message": "Membership pause can not be removed because it would result in a too early payment date and might cause multiple automatic payments.",
	"membershipLog.NoShowFeeCreatedForNonAttendance": "A fee of %s has been added for non-attendance at %s.",
	"membershipLog.NoShowFeeCreatedForLateCancellation": "A fee of %s has been added for late cancellation of %s.",
	"membershipLog.NoShowFeeCreatedPendingReview": "A fee of %s has been added for non-attendance at %s (pending review).",
	"membershipLog.LateCancelFeeCreatedPendingReview": "A fee of %s has been added for late cancellation of %s (pending review).",
	"membershipLog.NoShowFeeAtAmountCancelledForClass": "No-show fee of %s cancelled for %s.",
	"membershipLog.NoShowFeeAtAmountReactivatedForClass": "No-show fee of %s activated for %s.",
	"membershipLog.NoShowFeePaid": "No-show fee paid for %s",
	"membershipLog.NoShowFeesPaid": "No-show fees paid for %s",
	"membershipLog.DiscountCodeAdded": "Discount code \"%s\" added by admin. User: %s.",
	"membershipLog.DiscountCodeRemoved": "Discount code \"%s\" removed by admin. User: %s.",
	"membershipLog.DiscountCodeChanged": "Discount code changed from \"%s\" to \"%s\" by admin. User: %s.",
	"membershipLog.MembershipTypeChanged": "Membership type changed by admin from %s to %s. User: %s.",
	"membershipLog.PaymentOptionChanged": "Payment option changed by admin from %s to %s. User: %s.",
	"membershipLog.NextPaymentDateChanged": "Next payment date changed by admin from %s to %s. User: %s.",
	"membershipLog.MembershipCancelledByAdmin": "Membership cancelled by admin. Last day %s.",
	"membershipLog.MembershipCancelledByCustomer": "Membership cancelled by customer. Last day %s.",
	"membershipLog.ScheduledMembershipPauseWithStartDateRemoved": "Scheduled membership pause with start date %s removed.",
	"membershipLog.MembershipReactivatedByAdmin": "Membership re-activated by admin. User: %s.",
	"membershipLog.MembershipReactivatedByCustomer": "Membership re-activated by customer.",
	"membershipLog.MembershipPausedFromDateToDate": "Membership paused from %s to %s.",
	"membershipLog.MembershipPausedFromDateIndefinitely": "Membership paused from %s and indefinitely.",
	"membershipLog.MembershipPauseScheduledFromDateToDate": "Membership pause scheduled from %s to %s.",
	"membershipLog.MembershipPauseScheduledFromDateIndefinitely": "Membership pause scheduled from %s and indefinitely.",
	"membershipLog.PausedByCustomer": "Membership paused by the customer.",
	"membershipLog.PausedByTeacherWithName": "Membership paused by teacher %s.",
	"membershipLog.PausedByAdminWithName": "Membership paused by admin user %s.",
	"membershipLog.PauseScheduledByAdminWithName": "Membership pause scheduled by admin user %s.",
	"membershipLog.Comment": "Comment",
	"membershipLog.MembershipPauseChanged": "Membership pause changed.",
	"membershipLog.XChangedFromYToZ": "%s changed from %s to %s.",
	"membershipLog.MembershipPauseRemoved": "Membership pause removed.",
	"membershipLog.StartDate": "Start date",
	"membershipLog.EndDate": "End date",
	"membershipLog.indefinitely": "indefinitely",
	"membershipLog.Fee": "Fee",
	"membershipLog.MembershipPauseFeeOfXCollected": "Membership pause fee of %s collected.",
	"membershipLog.MembershipPauseEnded": "Membership pause ended. Payment date changed from %s to %s.",
	"membershipLog.AdminUserColonName": "Admin user: %s.",
	"orderItem.MembershipPauseFee": "Membership pause fee, %s",
	"membershipStatusText.MissingPaymentCard": "Payment card missing.",
	"membershipStatusText.PaymentDue": "Payment date exceeded!",
	"membershipStatusText.AutomaticRenewalFailedNTimes": {
		"one": "Automatic renewal failed %d time.",
		"other": "Automatic renewal failed %d times."
	},
	"membershipStatusText.Active": "Active.",
	"membershipStatusText.TerminatedFromDate": "Terminated from %s.",
	"membershipStatusText.Stopped": "Stopped.",
	"membershipStatusText.Archived": "Deleted.",
	"membershipStatusText.Paused": "Paused.",
	"membershipStatusText.MembershipPauseScheduled": "Pause scheduled.",
	"classPassLog.NoShowDayChargedFromClassPassForNonAttendance": "%s charged from class pass for non-attendance at %s. Class pass is now valid until %s.",
	"classPassLog.NoShowDayChargedFromClassPassForLateCancellation": "%s charged from class pass for late cancellation of %s. Class pass is now valid until %s.",
	"classPassLog.NoShowDayChargedFromClassPassPendingReview": "%s charged from class pass for non-attendance at %s (pending review).",
	"classPassLog.LateCancelDayChargedFromClassPassPendingReview": "%s charged from class pass for late cancellation of %s (pending review).",
	"classPassLog.NoShowFeeAppliedToFixedCountClassPassForNonAttendance": "Fee added for non-attendance at %s, meaning the class will not be refunded to the class pass. Class pass now has %s classes left.",
	"classPassLog.NoShowFeeAppliedToFixedCountClassPassForLateCancellation": "Fee added for late cancellation of %s, meaning the class will not be refunded to the class pass. Class pass now has %s classes left.",
	"classPassLog.NoShowFeeDaysChargedCancelledForClass": "No-show fee of %s cancelled for %s. Now valid until %s.",
	"classPassLog.NoShowFeeDaysChargedReactivatedForClass": "No-show fee of %s activated for %s. Now valid until %s.",
	"classPassLog.NoShowFeeClassSpentCancelledForClass": "No-show fee cancelled for %s. Class returned to class pass. Class pass now has %s classes left.",
	"classPassLog.NoShowFeeClassSpentReactivatedForClass": "No-show fee for %s activated. Class charged from class pass. Class pass now has %s classes left.",
	"classPassLog.classPassBoughtByCustomerValidUntil": "Class pass bought by customer, valid until %s",
	"classPassLog.classPassCreatedByUserTypeValidUntil": "Class pass created by %s, valid until %s.",
	"classPassLog.classPassCreatedByUserTypeValidUntilClassesLeft": "Class pass created by %s, valid until %s. %s classes left.",
	"classPassLog.classPassFixedUpdatedByAdmin": "Class pass changed by admin. Previously valid until %s, %s classes left. Now valid until %s, %s classes left.",
	"classPassLog.classPassUnlimitedUpdatedByAdmin": "Class pass changed by admin. Previously valid until %s. Now valid until %s.",
	"classPassLog.classPassDeletedByAdmin": "Class pass deleted by admin.",
	"classPassLog.classPassUsedToSignUpForClass": "Class pass used to sign up for %s.  Class pass now has %s classes left.",
	"classPassLog.classPassUsedToSignUpForWaitingListForClass": "Class pass used to join the waitlist for %s. Class pass now has %s classes left.",
	"classPassLog.classPassUsedToSignUpForLivestreamForClass": "Class pass used to sign up for livestream for %s. Class pass now has %s classes left.",
	"classPassLog.waitlistSignupConvertedToClassSignup": "Spot on waitlist for %s converted to real sign-up.",
	"classPass.classPassIsUnlimited": "Class pass is unlimited.",
	"classPass.classPassHasExpired": "Class pass has expired.",
	"classPass.classPassIsArchived": "Class pass is archived.",
	"classPassLog.classPassRefundedBecauseSignupWasCancelled": "Class pass was refunded because the sign-up for %s was cancelled. Class pass now has %s classes left.",
	"classPassLog.classPassRefundedBecauseSignupForLivestreamWasCancelled": "Class pass was refunded because the sign-up for livestream for %s was cancelled. Class pass now has %s classes left.",
	"classPassLog.classPassRefundedBecauseSignupForWaitingListWasCancelled": "Class pass was refunded because the sign-up for waiting list for %s was cancelled. Class pass now has %s classes left.",
	"classPassLog.classPassNotRefundedBecauseReason": "Class pass not refunded for cancellation of sign-up for %s. Reason: %s Class pass now has %s classes left.",
	"classPassLog.cancellationDeadlineHasBeenExceeded": "Cancellation deadline has been exceeded.",
	"classPassLog.classPassRefundedBecauseClassWasCancelled": "Class pass was refunded because %s was cancelled. Class pass now has %s classes left.",
	"classPassLog.ThereAreNowXClassesLeftOnTheClassPass": "Class pass now has %s classes left.",
	"noShowFeeText.OneDayDeducted": "One day deducted",
	"noShowFeeText.daysDeducted": "%s days deducted",
	"noShowFeeText.classPassClassSpent": "Klip brugt",
	"global.User": "User",
	"global.GiftCard": "Gift card",
	"userType.admin": "admin",
	"userType.theCustomer": "the customer",
	"giftCardLog.GiftCardPurchasedWithAmount": "Gift card purchased with a value of %s. Valid until %s",
	"giftCardLog.GiftCardSpentOnInvoiceIdWithAmountAndAmountLeft": "Gift card used for invoice %s with %s. Remaining value is %s.",
	"giftCardLog.GiftCardCreatedByAdminWithAmountAndAmountLeftAndUser": "Gift card created by admin with value %s and remaining value %s. Valid until %s. User: %s.",
	"giftCardLog.GiftCardUpdatedByAminWithAmountLeftAndUser": "Gift card updated by admin. Remaining value: %s. Valid until %s. User: %s.",
	"giftCardLog.GiftCardDeletedByAdminWithUser": "Gift card deleted by admin. User: %s.",
	"giftCardLog.GiftCardRegisteredAsNotSentWithUser": "Gift card registered as not sent. User: %s.",
	"giftCardLog.GiftCardRegisteredAsSentWithUser": "Gift card registered as sent. User: %s.",
	"email.WelcomeToYogo": "Welcome to YOGO",
	"email.PleaseConfirmEmail": "Please confirm your email",
	"email.Dear": "Dear",
	"email.ThanksForRequesting": "Thank you for requesting a YOGO demo",
	"email.ConfirmYourEmail": "In order to create the demo, we just need to confirm your email",
	"email.GetStartedWithYogo": "Please click this link to confirm your email and to get started with YOGO",
	"email.YourYogoDemoReady": "Your YOGO demo is ready.",
	"email.PleaseAllowIntroduction": "Please allow us to give a short introduction to the various parts of YOGO.",
	"email.CanLogWithiEmailPassword": "You can log into every module with your email and your password.",
	"email.AdminModule": "The admin module",
	"email.WhereKeepTrack": "This is where you keep track of everything.",
	"email.CustomersClassesEtc": "Your customers, classes, memberships, etc, etc, etc.",
	"email.CustomerModule": "The customer module",
	"email.WhereBuyRegister": "This is where your customers buy your memberships and register for your classes.",
	"email.WebsiteWidget": "The website widgets",
	"email.ModulesEasilyEmbeded": "These modules can be easily embedded in your own website.",
	"email.WayYourCustomers": "That way your customers will feel that they stay inside your universe when they sign up, buy memberships, etc.",
	"email.TeacherModule": "The teacher module",
	"email.WhereYourTeachers": "This is where your teachers have an overview of their classes and the people who are attending.",
	"email.AlsoWhereStartLiveStream": "It is also where they start the livestream for online classes.",
	"email.CheckinModule": "The check-in module",
	"email.CanRunOnTablet": "This module can run on a tablet in your studio if you would like your customers to check themselves in upon arrival.",
	"email.NativeApp": "The native APP",
	"email.YogoNativeApp": "The YOGO native app (add-on) is an app for iOS and Android, branded with your logo and colors.",

	"email.Hi": "Hi YOGO",
	"email.JustSignedForDemo": "This client just signed up for a demo",
	"email.StudioName": "Studio name",
	"email.UserName": "User name",
	"email.Email": "Email",
	
	"sales.InvoiceDateTime": "Invoice date/time",
  	"sales.Invoice#": "Invoice #",
	"sales.CustomerID": "Customer ID",
	"sales.CustomerName": "Customer name",
	"sales.CustomerEmail": "Customer email",
	"sales.Text": "Text",
	"sales.ItemType": "Item type",
	"sales.ItemID": "Item ID",
	"sales.Quantity": "Quantity",
	"sales.ItemPrice": "Item price",
	"sales.TotalPrice": "Total price",
	"sales.VatAmount": "VAT amount",
	"sales.PaymentServiceProvider": "Payment service provider",
	"sales.PaymentMethod": "Payment method",
	"sales.MaskedCard": "Masked card",
	"sales.InvoiceTotal": "Invoice total"
}
